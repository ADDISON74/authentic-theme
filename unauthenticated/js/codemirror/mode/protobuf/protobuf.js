(function(b){if(typeof exports=="object"&&typeof module=="object"){b(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],b)}else{b(CodeMirror)}}})(function(l){function g(a){return new RegExp("^(("+a.join(")|(")+"))\\b","i")}var k=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64"];var j=g(k);l.registerHelper("hintWords","protobuf",k);var h=new RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");function i(a){if(a.eatSpace()){return null}if(a.match("//")){a.skipToEnd();return"comment"}if(a.match(/^[0-9\.+-]/,false)){if(a.match(/^[+-]?0x[0-9a-fA-F]+/)){return"number"}if(a.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/)){return"number"}if(a.match(/^[+-]?\d+([EeDd][+-]?\d+)?/)){return"number"}}if(a.match(/^"([^"]|(""))*"/)){return"string"}if(a.match(/^'([^']|(''))*'/)){return"string"}if(a.match(j)){return"keyword"}if(a.match(h)){return"variable"}a.next();return null}l.defineMode("protobuf",function(){return{token:i}});l.defineMIME("text/x-protobuf","protobuf")});
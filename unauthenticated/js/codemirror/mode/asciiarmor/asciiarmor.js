(function(b){if(typeof exports=="object"&&typeof module=="object"){b(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],b)}else{b(CodeMirror)}}})(function(d){function c(b){var a=b.match(/^\s*\S/);b.skipToEnd();return a?"error":null}d.defineMode("asciiarmor",function(){return{token:function(a,b){var g;if(b.state=="top"){if(a.sol()&&(g=a.match(/^-----BEGIN (.*)?-----\s*$/))){b.state="headers";b.type=g[1];return"tag"}return c(a)}else{if(b.state=="headers"){if(a.sol()&&a.match(/^\w+:/)){b.state="header";return"atom"}else{var h=c(a);if(h){b.state="body"}return h}}else{if(b.state=="header"){a.skipToEnd();b.state="headers";return"string"}else{if(b.state=="body"){if(a.sol()&&(g=a.match(/^-----END (.*)?-----\s*$/))){if(g[1]!=b.type){return"error"}b.state="end";return"tag"}else{if(a.eatWhile(/[A-Za-z0-9+\/=]/)){return null}else{a.next();return"error"}}}else{if(b.state=="end"){return c(a)}}}}}},blankLine:function(a){if(a.state=="headers"){a.state="body"}},startState:function(){return{state:"top",type:null}}}});d.defineMIME("application/pgp","asciiarmor");d.defineMIME("application/pgp-keys","asciiarmor");d.defineMIME("application/pgp-signature","asciiarmor")});